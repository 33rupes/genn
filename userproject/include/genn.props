<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Define project configurations - we support x64 and Win32, debug, release and CPU_ONLY mode -->
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- Import built in C++ and CUDA properties -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.default.props" />
  
  <!-- Configure global properties to build application (rather than library) and to use default platform toolkit
  **NOTE** Very important to set platform toolset BEFORE importing CUDA properties -->
  <PropertyGroup>
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>$(DefaultPlatformToolset)</PlatformToolset>
    <IntDir>obj\$(Platform)\$(Configuration)\</IntDir>
    <OutDir>.\</OutDir>
    
    <!-- **HACK** determine the installed CUDA version by regexing CUDA path -->
    <CudaVersion>$([System.Text.RegularExpressions.Regex]::Match($(CUDA_PATH), "\\v([0-9.]+)$").Groups[1].Value)</CudaVersion>
  </PropertyGroup>
  
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA $(CudaVersion).props" />
  </ImportGroup>
  
  <!-- Customise C++ and CUDA compilation; and linking tasks -->
  <ItemDefinitionGroup>
    <CudaCompile>
      <Include>$(GENN_PATH)\lib\include;$(GENN_PATH)\userproject\include;$(CUDA_PATH)\include</Include>
      <GenerateLineInfo>true</GenerateLineInfo>
      <TargetMachinePlatform Condition=" '$(Platform)'=='x64' ">64</TargetMachinePlatform>
      <TargetMachinePlatform Condition=" '$(Platform)'=='Win32' ">32</TargetMachinePlatform>
    </CudaCompile>
    <ClCompile>
      <AdditionalIncludeDirectories>$(GENN_PATH)\lib\include;$(GENN_PATH)\userproject\include;$(CUDA_PATH)\include</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <DebugInformationFormat Condition=" '$(Configuration)' == 'Debug' ">ProgramDatabase</DebugInformationFormat>
      <Optimization Condition=" '$(Configuration)' == 'Debug' ">Disabled</Optimization>
      <ExceptionHandling>Sync</ExceptionHandling>
    </ClCompile>
    <Link>
      <AdditionalDependencies Condition=" '$(Configuration)' == 'Debug' ">$(GENN_PATH)\lib\lib\genn_debug.lib;$(CUDA_PATH)\lib\$(Platform)\cudart.lib;$(CUDA_PATH)\lib\$(Platform)\cuda.lib</AdditionalDependencies>
      <AdditionalDependencies Condition=" '$(Configuration)' != 'Debug' ">$(GENN_PATH)\lib\lib\genn.lib;$(CUDA_PATH)\lib\$(Platform)\cudart.lib;$(CUDA_PATH)\lib\$(Platform)\cuda.lib</AdditionalDependencies>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <GenerateDebugInformation Condition=" '$(Configuration)' == 'Debug' ">true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  
  <!-- Import builtin C++ properties -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
    
  <!-- Reference libgenn so it gets built automatically if required -->
  <ItemGroup>
    <ProjectReference Include="$(GENN_PATH)\lib\lib_genn.vcxproj">
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
      <UseLibraryDependencyInputs>false</UseLibraryDependencyInputs>
    </ProjectReference>
  </ItemGroup> 
  
  <!-- Import builtin C++ and CUDA targets -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA $(CudaVersion).targets" />
  </ImportGroup>
</Project>