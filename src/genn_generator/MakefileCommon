# Include common makefile
include ../MakefileCommon

# Check required environment variable names are set
ifndef BACKEND_NAME
	$(error Environment variable BACKEND_NAME must be defined)
endif
ifndef BACKEND_NAMESPACE
	$(error Environment variable BACKEND_NAMESPACE must be defined)
endif
ifndef MODEL
	$(error Environment variable MODEL must be defined)
endif
ifndef GENERATOR_PATH
	$(error Environment variable GENERATOR_PATH must be defined)
endif

# Add include paths to CXX flags
CXXFLAGS		+= -I../lib_genn/include -I../third_party

# BUILD_MODEL_INCLUDE contains a colon-seperated list of additional include paths.
# substitute :s for spaces and then prepend each path with -I so it gets turned into an include directory
CXXFLAGS		+=$(patsubst %,-I%,$(subst :, ,$(BUILD_MODEL_INCLUDE)))

# Add standard compiler and linker flags
LDFLAGS			+= -L../lib -lgenn$(GENN_PREFIX) -l$(BACKEND_NAME)_backend$(GENN_PREFIX) 
CXXFLAGS		+= -I../backends/$(BACKEND_NAME)/include -DMODEL=\"$(MODEL)\" -DBACKEND_NAMESPACE=$(BACKEND_NAMESPACE)

# Add prefix to generator name
GENERATOR		:=$(GENERATOR_PATH)/generator$(GENN_PREFIX)

.PHONY: all clean libgenn backend

all: $(GENERATOR)

$(GENERATOR): generator.cc libgenn backend
	mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) generator.cc -o $@ $(LDFLAGS)

libgenn:
	$(MAKE) -C ../lib_genn

backend:
	$(MAKE) -C ../backends/$(BACKEND_NAME)

clean:
	rm -f generator.o $(GENERATOR)
