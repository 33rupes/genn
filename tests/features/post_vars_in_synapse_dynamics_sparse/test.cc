#include <functional>
#include <numeric>

// Google test includes
#include "gtest/gtest.h"

// Autogenerated simulation code includess
#include "post_vars_in_synapse_dynamics_sparse_CODE/definitions.h"

// **NOTE** base-class for simulation tests must be
// included after auto-generated globals are includes
#include "../../utils/simulation_test_post_vars_sparse.h"

TEST_P(SimulationTestPostVarsSparse, AcceptableError)
{
  initpost_vars_in_synapse_dynamics_sparse();

  float err = Simulate(
    [](float t)
    {
        return (t > 0.0001+DT);
    });

  // Check total error is less than some tolerance
  EXPECT_LT(err, 5e-3);
}

#ifndef CPU_ONLY
auto simulatorBackends = ::testing::Values(true, false);
#else
auto simulatorBackends = ::testing::Values(false);
#endif

INSTANTIATE_TEST_CASE_P(SynapseDynamics,
                        SimulationTestPostVarsSparse,
                        simulatorBackends);