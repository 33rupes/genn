// Google test includes
#include "gtest/gtest.h"

// Autogenerated simulation code includess
#include DEFINITIONS_HEADER

// This test does't support building for GPU and testing on CPU
#define CPU_GPU_NOT_SUPPORTED

// **NOTE** base-class for simulation tests must be
// included after auto-generated globals are includes
#include "../../utils/simulation_test.h"

// Combine neuron and synapse policies together to build variable-testing fixture
class SimTest : public SimulationTestModern
{
public:
    void Simulate()
    {
        while(t < 200.0f) {
            StepGeNN();

            std::cout << t << ":\t";
            for(unsigned int i = 0; i < 10; i++) {
                std::cout << wsyn[i] << ",";
            }
            std::cout << std::endl;

        }
    }
};

TEST_P(SimTest, AcceptableError)
{
    Simulate();
}

#ifndef CPU_ONLY
auto simulatorBackends = ::testing::Values(true, false);
#else
auto simulatorBackends = ::testing::Values(false);
#endif

WRAPPED_INSTANTIATE_TEST_CASE_P(MODEL_NAME,
                                SimTest,
                                simulatorBackends);